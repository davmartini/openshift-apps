---
apiVersion: v1
kind: DeploymentConfig
metadata:
  annotations:
    template.alpha.openshift.io/wait-for-ready: 'true'
  name: catalogue-db
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    name: catalogue-db
  strategy:
    type: Recreate
    recreateParams:
      post:
        failurePolicy: ignore
        execNewPod:
          volumes:
            - catalogue-db-init-volume
          containerName: catalogue-db
          command:
          - /bin/sh
          - -c
          - hostname && sleep 120 && /opt/rh/rh-mysql57/root/usr/bin/mysql --force -h $CATALOGUE_DB_SERVICE_HOST -u $MYSQL_USER -D $MYSQL_DATABASE -p$MYSQL_PASSWORD -P 3306 < /mysql-init/dump.sql
  template:
    metadata:
      labels:
        name: catalogue-db
    spec:
      containers:
      - env:
        - name: MYSQL_USER
          value: catalogue_user
        - name: MYSQL_PASSWORD
          value: default_password
        - name: MYSQL_DATABASE
          value: socksdb
        image: " "
        imagepullpolicy: always
        name: catalogue-db
        ports:
        - containerPort: 3306
        resources:
          limits:
            memory: 512Mi
        volumeMounts:
        - mountPath: "/var/lib/mysql/data"
          name: catalogue-db-data-volume
        - mountPath: "/mysql-init"
          name: catalogue-db-init-volume
      volumes:
      - name: catalogue-db-data-volume
        persistentVolumeClaim:
          claimName: catalogue-data-volume-claim
      - name: catalogue-db-init-volume
        configMap:
          name: catalogue-db-config
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - catalogue-db
      from:
        kind: ImageStreamTag
        name: mysql:5.7
        namespace: openshift
    type: ImageChange
  - type: ConfigChange
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: catalogue-data-volume-claim
  namespace: sock-shop
spec:
  storageClassName: ""
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

